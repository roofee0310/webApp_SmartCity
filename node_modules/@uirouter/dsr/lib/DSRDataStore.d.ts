import { StateOrName, UIRouter } from '@uirouter/core';
import { RecordedDSR } from './interface';
export interface DSRDataStore {
    init(router: UIRouter): void;
    get(state: StateOrName): RecordedDSR[];
    set(state: StateOrName, recordedDSR: RecordedDSR[] | undefined): void;
}
export declare class StateObjectDataStore implements DSRDataStore {
    private router;
    private getState;
    init(router: UIRouter): void;
    get(stateOrName: StateOrName): RecordedDSR[];
    set(stateOrName: StateOrName, recordedDsr: RecordedDSR[]): void;
}
export declare class LocalStorageDataStore implements DSRDataStore {
    private router;
    private key;
    private _storage;
    constructor(storage?: Storage);
    private getStore;
    private setStore;
    private getStateName;
    init(router: UIRouter): void;
    get(stateOrName: StateOrName): RecordedDSR[];
    set(stateOrName: StateOrName, recordedDsr: RecordedDSR[]): void;
}
export declare class SessionStorageDataStore extends LocalStorageDataStore {
    constructor();
}
