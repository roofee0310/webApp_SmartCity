"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var StateObjectDataStore = /** @class */ (function () {
    function StateObjectDataStore() {
    }
    StateObjectDataStore.prototype.getState = function (stateOrName) {
        var state = this.router.stateService.get(stateOrName);
        return state && state.$$state();
    };
    StateObjectDataStore.prototype.init = function (router) {
        this.router = router;
    };
    StateObjectDataStore.prototype.get = function (stateOrName) {
        return this.getState(stateOrName).$dsr || [];
    };
    StateObjectDataStore.prototype.set = function (stateOrName, recordedDsr) {
        var state = this.getState(stateOrName);
        if (recordedDsr) {
            state.$dsr = recordedDsr;
        }
        else {
            delete state.$dsr;
        }
    };
    return StateObjectDataStore;
}());
exports.StateObjectDataStore = StateObjectDataStore;
var LocalStorageDataStore = /** @class */ (function () {
    function LocalStorageDataStore(storage) {
        this.key = 'uiRouterDeepStateRedirect';
        this._storage = localStorage;
        this._storage = storage || localStorage;
    }
    LocalStorageDataStore.prototype.getStore = function () {
        var item = this._storage.getItem(this.key);
        return JSON.parse(item || '{}');
    };
    LocalStorageDataStore.prototype.setStore = function (contents) {
        if (contents) {
            try {
                this._storage.setItem(this.key, JSON.stringify(contents));
            }
            catch (err) {
                console.error('UI-Router Deep State Redirect: cannot store object in LocalStorage.  Is there a circular reference?', contents);
                console.error(err);
            }
        }
        else {
            this._storage.removeItem(this.key);
        }
    };
    LocalStorageDataStore.prototype.getStateName = function (stateOrName) {
        var state = this.router.stateService.get(stateOrName);
        return state && state.name;
    };
    LocalStorageDataStore.prototype.init = function (router) {
        this.router = router;
    };
    LocalStorageDataStore.prototype.get = function (stateOrName) {
        var stateName = this.getStateName(stateOrName);
        var store = this.getStore();
        return store[stateName] || [];
    };
    LocalStorageDataStore.prototype.set = function (stateOrName, recordedDsr) {
        var stateName = this.getStateName(stateOrName);
        var store = this.getStore();
        store[stateName] = recordedDsr;
        this.setStore(store);
    };
    return LocalStorageDataStore;
}());
exports.LocalStorageDataStore = LocalStorageDataStore;
var SessionStorageDataStore = /** @class */ (function (_super) {
    __extends(SessionStorageDataStore, _super);
    function SessionStorageDataStore() {
        return _super.call(this, sessionStorage) || this;
    }
    return SessionStorageDataStore;
}(LocalStorageDataStore));
exports.SessionStorageDataStore = SessionStorageDataStore;
//# sourceMappingURL=DSRDataStore.js.map