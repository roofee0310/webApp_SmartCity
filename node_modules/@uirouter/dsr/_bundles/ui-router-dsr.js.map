{"version":3,"file":"ui-router-dsr.js","sources":["../src/DSRDataStore.ts","../src/dsr.ts"],"sourcesContent":["import { StateOrName, UIRouter } from '@uirouter/core';\nimport { RecordedDSR } from './interface';\n\nexport interface DSRDataStore {\n  init(router: UIRouter): void;\n  // Gets the remembered DSR target state for a given state and params\n  get(state: StateOrName): RecordedDSR[];\n  // Sets the remembered DSR target state for a given state and params\n  set(state: StateOrName, recordedDSR: RecordedDSR[] | undefined): void;\n}\n\nexport class StateObjectDataStore implements DSRDataStore {\n  private router: UIRouter;\n\n  private getState(stateOrName: StateOrName) {\n    const state = this.router.stateService.get(stateOrName);\n    return state && state.$$state();\n  }\n\n  public init(router: UIRouter): void {\n    this.router = router;\n  }\n\n  public get(stateOrName: StateOrName): RecordedDSR[] {\n    return this.getState(stateOrName).$dsr || [];\n  }\n\n  public set(stateOrName: StateOrName, recordedDsr: RecordedDSR[]): void {\n    const state = this.getState(stateOrName);\n    if (recordedDsr) {\n      state.$dsr = recordedDsr;\n    } else {\n      delete state.$dsr;\n    }\n  }\n}\n\nexport class LocalStorageDataStore implements DSRDataStore {\n  private router: UIRouter;\n  private key = 'uiRouterDeepStateRedirect';\n  private _storage: Storage = localStorage;\n\n  constructor(storage?: Storage) {\n    this._storage = storage || localStorage;\n  }\n\n  private getStore() {\n    const item = this._storage.getItem(this.key);\n    return JSON.parse(item || '{}');\n  }\n\n  private setStore(contents: any) {\n    if (contents) {\n      try {\n        this._storage.setItem(this.key, JSON.stringify(contents));\n      } catch (err) {\n        console.error(\n          'UI-Router Deep State Redirect: cannot store object in LocalStorage.  Is there a circular reference?',\n          contents\n        );\n        console.error(err);\n      }\n    } else {\n      this._storage.removeItem(this.key);\n    }\n  }\n\n  private getStateName(stateOrName: StateOrName) {\n    const state = this.router.stateService.get(stateOrName);\n    return state && state.name;\n  }\n\n  public init(router: UIRouter): void {\n    this.router = router;\n  }\n\n  public get(stateOrName: StateOrName): RecordedDSR[] {\n    const stateName = this.getStateName(stateOrName);\n    const store = this.getStore();\n    return store[stateName] || [];\n  }\n\n  public set(stateOrName: StateOrName, recordedDsr: RecordedDSR[]): void {\n    const stateName = this.getStateName(stateOrName);\n    const store = this.getStore();\n    store[stateName] = recordedDsr;\n    this.setStore(store);\n  }\n}\n\nexport class SessionStorageDataStore extends LocalStorageDataStore {\n  constructor() {\n    super(sessionStorage);\n  }\n}\n","import {\n  StateObject,\n  StateDeclaration,\n  Param,\n  UIRouter,\n  RawParams,\n  StateOrName,\n  TargetState,\n  Transition,\n  UIRouterPlugin,\n  TransitionService,\n  StateService,\n} from '@uirouter/core';\n\nimport { DSRDataStore, StateObjectDataStore } from './DSRDataStore';\nimport { _DSRConfig, DSRConfigObj, DSRFunction, DSRProp, ParamPredicate, RecordedDSR } from './interface';\n\nclass DSRPlugin implements UIRouterPlugin {\n  name = 'deep-state-redirect';\n\n  dataStore: DSRDataStore;\n  $transitions: TransitionService;\n  $state: StateService;\n  hookDeregFns = [];\n\n  constructor($uiRouter: UIRouter, options: { dataStore: DSRDataStore }) {\n    this.$transitions = $uiRouter.transitionService;\n    this.$state = $uiRouter.stateService;\n    this.dataStore = (options && options.dataStore) || new StateObjectDataStore();\n    this.dataStore.init($uiRouter);\n\n    this.hookDeregFns.push(\n      this.$transitions.onRetain({ retained: state => !!this.getDsrProp(state.self) }, this.recordDeepState.bind(this))\n    );\n    this.hookDeregFns.push(\n      this.$transitions.onEnter({ entering: state => !!this.getDsrProp(state.self) }, this.recordDeepState.bind(this))\n    );\n    this.hookDeregFns.push(\n      this.$transitions.onBefore({ to: state => !!this.getDsrProp(state.self) }, this.deepStateRedirect.bind(this))\n    );\n  }\n\n  dispose(router: UIRouter): void {\n    this.hookDeregFns.forEach(fn => fn());\n  }\n\n  /**\n   * Resets deep state redirect\n   *\n   * A deep state is recorded for each DSR state.\n   * This function resets recorded deep state redirect(s) to the initial value.\n   *\n   * If called with no parameters, the redirects for all states are reset.\n   *\n   * If called with a `state` parameter, the redirect for that state is reset.\n   *\n   * If called with `state` and `params` parameters, the redirect for that state and set of parameter values is reset.\n   *\n   * @param state (optional) the redirect for this state will be reset\n   * @param params (optional) the redirect for the state and parameters will be reset\n   */\n  reset(state?: StateOrName, params?: RawParams): void {\n    const { $state } = this;\n    if (!state) {\n      $state.get().forEach(_state => this.dataStore.set(_state, undefined));\n    } else if (!params) {\n      this.dataStore.set(state, undefined);\n    } else {\n      const currentDSRS = this.dataStore.get(state);\n      const $$state = $state.get(state).$$state();\n      this.dataStore.set(state, currentDSRS.filter(this.paramsEqual($$state, params, undefined, true)));\n    }\n  }\n\n  /**\n   * Returns the recorded redirect\n   *\n   * Returns the recorded redirect for a given DSR `state` (and optionally `params`).\n   *\n   * @param state the DSR state\n   * @param params (optional) the parameter values\n   *\n   * @returns the recorded redirect `TargetState`\n   */\n  getRedirect(state: StateOrName, params?: RawParams): TargetState {\n    return this.getDeepStateRedirect(state, params);\n  }\n\n  private getDsrProp(state: StateDeclaration): DSRProp {\n    return state.deepStateRedirect || state.dsr;\n  }\n\n  public getConfig(state: StateDeclaration): _DSRConfig {\n    const { $state } = this;\n    const dsrProp: DSRProp = this.getDsrProp(state);\n    if (typeof dsrProp === 'undefined') return;\n\n    let params: ParamPredicate;\n    let defaultTarget: TargetState = typeof dsrProp === 'string' ? $state.target(dsrProp) : undefined;\n    let fn: DSRFunction = typeof dsrProp === 'function' ? dsrProp : undefined;\n\n    if (typeof dsrProp === 'object') {\n      fn = dsrProp.fn;\n      if (typeof dsrProp.default === 'object') {\n        defaultTarget = $state.target(dsrProp.default.state, dsrProp.default.params, dsrProp.default.options);\n      } else if (typeof dsrProp.default === 'string') {\n        defaultTarget = $state.target(dsrProp.default);\n      }\n\n      const paramsProp = (dsrProp as DSRConfigObj).params;\n\n      if (paramsProp === true) {\n        params = () => true;\n      } else if (Array.isArray(paramsProp)) {\n        params = (param: Param) => paramsProp.indexOf(param.id) !== -1;\n      }\n    }\n\n    fn = fn || (((transition: Transition, target: TargetState) => target) as DSRFunction);\n\n    return { default: defaultTarget, params, fn };\n  }\n\n  public paramsEqual(\n    state: StateObject,\n    transParams: RawParams,\n    paramPredicate: ParamPredicate = () => true,\n    negate = false\n  ): (redirect: RecordedDSR) => boolean {\n    const schema = state.parameters({ inherit: true }).filter(paramPredicate);\n\n    return (redirect: RecordedDSR) => {\n      const equals = Param.equals(schema, redirect.triggerParams, transParams);\n      return negate ? !equals : equals;\n    };\n  }\n\n  private recordDeepState(transition: Transition, state: StateDeclaration): void {\n    const { $state } = this;\n    const hasParamsConfig: boolean = !!this.getConfig(state).params;\n    const _state: StateObject = state.$$state();\n\n    transition.promise.then(() => {\n      const transTo = transition.to();\n      const triggerParams = transition.params();\n      const target: TargetState = $state.target(transTo, triggerParams);\n      const targetStateName = target.name();\n      const targetParams = target.params();\n      const recordedDSR: RecordedDSR = { triggerParams, targetStateName, targetParams };\n\n      if (hasParamsConfig) {\n        const currentDSRS: RecordedDSR[] = this.dataStore.get(_state);\n        const predicate = this.paramsEqual(transTo.$$state(), triggerParams, this.getConfig(state).params, true);\n        const updatedDSRS = currentDSRS.filter(predicate).concat(recordedDSR);\n        this.dataStore.set(_state, updatedDSRS);\n      } else {\n        this.dataStore.set(_state, [recordedDSR]);\n      }\n    });\n  }\n\n  private deepStateRedirect(transition: Transition): TargetState | undefined {\n    const opts = transition.options();\n    if (opts['ignoreDsr'] || (opts.custom && opts.custom.ignoreDsr)) return;\n\n    const config: _DSRConfig = this.getConfig(transition.to());\n    let redirect: TargetState = this.getDeepStateRedirect(transition.to(), transition.params());\n\n    redirect = config.fn(transition, redirect);\n\n    if (redirect && redirect.state() === transition.to()) return;\n\n    return redirect;\n  }\n\n  private getTargetState(dsr: RecordedDSR): TargetState {\n    return this.$state.target(dsr.targetStateName, dsr.targetParams);\n  }\n\n  private getDeepStateRedirect(stateOrName: StateOrName, params: RawParams): TargetState {\n    const { $state } = this;\n    const _state = $state.get(stateOrName);\n    const state = _state && _state.$$state();\n    const config: _DSRConfig = this.getConfig(_state);\n    const currentDSRS = this.dataStore.get(stateOrName);\n    let recordedDSR: RecordedDSR;\n\n    if (config.params) {\n      const predicate = this.paramsEqual(state, params, config.params, false);\n      const match = currentDSRS.find(predicate);\n      recordedDSR = match && match;\n    } else {\n      recordedDSR = currentDSRS[0] && currentDSRS[0];\n    }\n\n    let dsrTarget = recordedDSR ? this.getTargetState(recordedDSR) : config.default;\n\n    if (dsrTarget) {\n      // merge original params with deep state redirect params\n      const targetParams = Object.assign({}, params, dsrTarget.params());\n      dsrTarget = $state.target(dsrTarget.state(), targetParams, dsrTarget.options());\n    }\n\n    return dsrTarget;\n  }\n}\n\nexport { DSRPlugin };\n"],"names":["Param"],"mappings":"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"}